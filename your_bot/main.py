# main.py
import logging
import asyncio
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ConversationHandler
from config import TELEGRAM_BOT_TOKEN
from handlers.main_menu import start, main_menu_handler
from handlers.characters import States as CharactersStates
from handlers.guides import States as GuidesStates
# –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ —ñ–Ω—à—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏...

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def setup_conversation_handler() -> ConversationHandler:
    return ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            States.MAIN_MENU: [MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu_handler)],
            # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ —Å—Ç–∞–Ω–∏ —Ç–∞ –æ–±—Ä–æ–±–Ω–∏–∫–∏
        },
        fallbacks=[CommandHandler('start', start)]
    )

async def main():
    application = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    
    # –î–æ–¥–∞—î–º–æ ConversationHandler
    conv_handler = setup_conversation_handler()
    application.add_handler(conv_handler)
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω—à—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
    async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
        logger.error(msg="–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞:", exc_info=context.error)
    application.add_error_handler(error_handler)
    
    logger.info("üîÑ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ.")
    await application.run_polling()

if __name__ == '__main__':
    asyncio.run(main())
