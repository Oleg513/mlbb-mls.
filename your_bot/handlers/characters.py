# handlers/characters.py
from telegram import ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from enum import Enum, auto
from typing import Dict
import logging
from utils.data_loader import load_json_data
from utils.openai_api import get_gpt_response
from config import system_description, response_structure

logger = logging.getLogger(__name__)

class States(Enum):
    CHARACTERS_MENU = auto()
    # –Ü–Ω—à—ñ —Å—Ç–∞–Ω–∏...

heroes_data = load_json_data('data/heroes_tanks.json')
characters = load_json_data('data/characters.json')

async def characters_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    buttons = [
        [KeyboardButton("üìù –î–µ—Ç–∞–ª—ñ –ø—Ä–æ –≥–µ—Ä–æ—ó–≤"), KeyboardButton("üß© –í–≥–∞–¥–∞–π –≥–µ—Ä–æ—è")],
        [KeyboardButton("‚öîÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤"), KeyboardButton("üéØ –ö–æ–Ω—Ç—Ä–≥–µ—Ä–æ—ó")],
        [KeyboardButton("üóÇ –°–ø–∏—Å–æ–∫ –≥–µ—Ä–æ—ó–≤"), KeyboardButton("üîô –ù–∞–∑–∞–¥")]
    ]
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True, one_time_keyboard=False)
    await update.message.reply_text("üßô‚Äç‚ôÇÔ∏è –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=reply_markup)
    return States.CHARACTERS_MENU

# –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø—ñ–¥–º–µ–Ω—é, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:
async def send_character_details(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –õ–æ–≥—ñ–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ –≥–µ—Ä–æ—è
    pass

# –Ü–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó...
