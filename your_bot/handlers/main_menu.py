# handlers/main_menu.py
from telegram import ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from enum import Enum, auto
from typing import Dict
import logging

logger = logging.getLogger(__name__)

class States(Enum):
    MAIN_MENU = auto()
    # –Ü–Ω—à—ñ —Å—Ç–∞–Ω–∏...

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.effective_user.id
    logger.info("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ–Ω—ñ—Ü—ñ—é–≤–∞–≤ –∫–æ–º–∞–Ω–¥—É /start")
    buttons = [
        [KeyboardButton("üßô‚Äç‚ôÇÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ"), KeyboardButton("üìö –ì–∞–π–¥–∏"), KeyboardButton("üèÜ –¢—É—Ä–Ω—ñ—Ä–∏")],
        [KeyboardButton("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è"), KeyboardButton("üÜì –ü–æ—á–∞—Ç–∫—ñ–≤–µ—Ü—å"), KeyboardButton("üîç –ü–æ—à—É–∫")],
        [KeyboardButton("üì∞ –ù–æ–≤–∏–Ω–∏"), KeyboardButton("üí° –î–æ–ø–æ–º–æ–≥–∞"), KeyboardButton("üéÆ –í—ñ–∫—Ç–æ—Ä–∏–Ω–∏")]
    ]
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True, one_time_keyboard=False)
    await update.message.reply_text("üîç –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", reply_markup=reply_markup)
    return States.MAIN_MENU

async def main_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_input = update.message.text
    logger.info(f"–í–∏–±—ñ—Ä –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é: {user_input}")
    
    # –õ–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤ –¥–æ –ø—ñ–¥–º–µ–Ω—é
    # –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
    if user_input == "üßô‚Äç‚ôÇÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ":
        from handlers.characters import characters_menu
        return await characters_menu(update, context)
    elif user_input == "üìö –ì–∞–π–¥–∏":
        from handlers.guides import guides_menu
        return await guides_menu(update, context)
    # –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ –æ–ø—Ü—ñ—ó...
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–±—Ä–æ–±–∏—Ç–∏ –≤–∞—à –∑–∞–ø–∏—Ç.")
        return States.MAIN_MENU
